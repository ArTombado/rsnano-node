name: Unit Tests

on: [push, pull_request]

jobs:
  osx_test:
    name: macOS
    strategy:
      fail-fast: false
      matrix:
        RELEASE:
          - ${{ startsWith(github.ref, 'refs/tags/') }}
    env:
      BUILD_TYPE: ${{ matrix.RELEASE && 'RelWithDebInfo' || 'Debug' }}
    runs-on: macos-12
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 0 # Full history needed for restoring file timestamps

      - name: Restore Timestamps
        uses: ./.github/actions/restore-git-mtimes
        continue-on-error: true

      - name: Restore Build Cache
        uses: actions/cache/restore@v3
        continue-on-error: true
        with:
          path: |
            build
            /Users/runner/.cargo/registry
          key: ${{ runner.os }}-build-cache

      - name: Prepare
        run: ci/prepare/macos/prepare.sh

      - name: Build Tests
        id: build
        run: ci/build-tests.sh

      # hacky fix so that the build cache can be saved
      - name: Change owner before caching
        run: sudo chown -R runner build

      - name: Save Build Cache
        # Only save build cache from develop to avoid polluting it by other branches / PRs
        if: github.ref == 'refs/heads/develop' && success()
        uses: actions/cache/save@v3
        continue-on-error: true
        with:
          path: |
            build
            /Users/runner/.cargo/registry
          key: ${{ runner.os }}-build-cache

      - name: Core Tests
        if: steps.build.outcome == 'success' && (success() || failure())
        run: cd build && ../ci/tests/run-core-tests.sh

      - name: RPC Tests
        if: steps.build.outcome == 'success' && (success() || failure())
        run: cd build && ../ci/tests/run-rpc-tests.sh

      - name: System Tests
        if: steps.build.outcome == 'success' && (success() || failure())
        run: cd build && ../ci/tests/run-system-tests.sh

  linux_test:
    name: Linux [${{ matrix.COMPILER }}]
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        COMPILER: [gcc, clang]
        RELEASE:
          - ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-22.04
    env:
      COMPILER: ${{ matrix.COMPILER }}
      BUILD_TYPE: ${{ matrix.RELEASE && 'RelWithDebInfo' || 'Debug' }}
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 0 # Full history needed for restoring file timestamps

      - name: Restore Timestamps
        uses: ./.github/actions/restore-git-mtimes
        continue-on-error: true

      - name: Restore Build Cache
        uses: actions/cache/restore@v3
        continue-on-error: true
        with:
          path: |
            build
            cargo-registry
          key: ${{ runner.os }}-${{ env.COMPILER }}-build-cache

      - name: Prepare
        run: sudo -E ci/prepare/linux/prepare.sh

      - name: Build Tests
        id: build
        run: ci/build-tests.sh

      - name: Save Build Cache
        # Only save build cache from develop to avoid polluting it by other branches / PRs
        if: github.ref == 'refs/heads/develop' && success()
        uses: actions/cache/save@v3
        continue-on-error: true
        with:
          path: |
            build
            cargo-registry
          key: ${{ runner.os }}-${{ env.COMPILER }}-build-cache

      - name: Core Tests
        if: steps.build.outcome == 'success' && (success() || failure())
        run: cd build && ../ci/tests/run-core-tests.sh

      - name: RPC Tests
        if: steps.build.outcome == 'success' && (success() || failure())
        run: cd build && ../ci/tests/run-rpc-tests.sh

      - name: System Tests
        if: steps.build.outcome == 'success' && (success() || failure())
        run: cd build && ../ci/tests/run-system-tests.sh